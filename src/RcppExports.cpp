// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_gini
double C_gini(NumericVector x);
RcppExport SEXP _catsim_C_gini(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_gini(x));
    return rcpp_result_gen;
END_RCPP
}
// C_meansfunc
double C_meansfunc(NumericVector x, NumericVector y, double c);
RcppExport SEXP _catsim_C_meansfunc(SEXP xSEXP, SEXP ySEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(C_meansfunc(x, y, c));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_catsim_C_gini", (DL_FUNC) &_catsim_C_gini, 1},
    {"_catsim_C_meansfunc", (DL_FUNC) &_catsim_C_meansfunc, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_catsim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
